autoscaling:
  enabled: true
  maxReplicas: 4
  metrics:
    - pods:
        metricName: container_network_receive_bytes
        targetAverageValue: 500k
      type: Pods
  minReplicas: 2
controller:
  kind: Rollout
datadog:
  enabled: true
  env: alpha
  service: sample-node
  version: 0.5.4
dnsPolicy: Default
env:
  - name: PROFILE
    value: dev
  - name: DD_AGENT_ENABLED
    value: "true"
fullnameOverride: sample-node
hostNetwork: true
image:
  repository: nalbam/sample-node
  tag: 0.5.4
ingress:
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/ssl-redirect: "true"
  enabled: true
  hosts:
    - host: sample-node-dev.bruce.spic.me
      paths:
        - /
livenessProbe:
  failureThreshold: 3
  httpGet:
    path: /
    port: 3000
  initialDelaySeconds: 30
  periodSeconds: 10
podAnnotations:
  chaos.alpha.kubernetes.io/enabled: "true"
preview:
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/ssl-redirect: "true"
  enabled: true
  hosts:
    - host: sample-node-dev-preview.bruce.spic.me
      paths:
        - /
readinessProbe:
  failureThreshold: 3
  httpGet:
    path: /
    port: 3000
  initialDelaySeconds: 30
  periodSeconds: 10
replicaCount: 1
resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi
revisionHistoryLimit: 1
service:
  port: 3000
sidekicks:
  - affinity: {}
    env: []
    envFrom: []
    image:
      repository: redis
      tag: latest
    livenessProbe: {}
    name: sample-node-redis
    nodeSelector: {}
    readinessProbe: {}
    replicaCount: 1
    resources: {}
    revisionHistoryLimit: 5
    service:
      name: redis
      port: 6379
    tolerations: {}
strategy:
  blueGreen:
    activeService: sample-node
    autoPromotionEnabled: true
    autoPromotionSeconds: 30
    previewService: sample-node-preview
