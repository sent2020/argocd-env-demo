apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  labels:
    app: sample-node
    app.kubernetes.io/name: sample-node
  name: sample-node
spec:
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: sample-node
  # strategy:
  #   rollingUpdate:
  #     maxSurge: 25%
  #     maxUnavailable: 25%
  #   type: RollingUpdate
  template:
    metadata:
      labels:
        app: sample-node
        app.kubernetes.io/name: sample-node
        version: latest
    spec:
      containers:
        - env:
            - name: DD_ENV
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/env']
            - name: DD_SERVICE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/service']
            - name: DD_VERSION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/version']
            - name: DD_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: RELOAD_HASH
              value: 8ead08c18a09833fd3cd44bba2c763ad
            - name: CONFIGMAP_HASH
              value: d1065c2482d693a0467421955cd1bdc5
            - name: SECRET_HASH
              value: b05784a1ef8a43db208788a13421b9c3
          envFrom:
            - configMapRef:
                name: sample-node
            - secretRef:
                name: sample-node
          image: nalbam/sample-node:latest
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: sample-node
          ports:
            - containerPort: 3000
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 100m
              memory: 120Mi
            requests:
              cpu: 100m
              memory: 120Mi
